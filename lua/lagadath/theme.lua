local blend = require('lagadath.util').blend

local M = {}

function M.get()
  local p = require('lagadath.palette')

  local theme = {
    ColorColumn = { bg = p.overlay },
    Conceal = { bg = p.none },
    CurSearch = { link = 'IncSearch' },
    CursorColumn = { bg = p.highlight_low },
    CursorLine = { bg = p.highlight_low },
    CursorLineNr = { fg = p.text },
    DarkenedPanel = { bg = p.surface },
    DarkenedStatusline = { bg = p.surface },
    DiffAdd = { bg = blend(p.rose, p.base, 0.2) },
    DiffChange = { bg = p.overlay },
    DiffDelete = { bg = blend(p.pine, p.base, 0.2) },
    DiffText = { bg = blend(p.rose, p.base, 0.2) },
    Directory = { fg = p.foam, bg = p.none },
    ErrorMsg = { fg = p.love, style = 'bold' },
    FloatBorder = { fg = p.highlight_med },
    FloatTitle = { fg = p.muted },
    FoldColumn = { fg = p.muted },
    Folded = { fg = p.text, bg = p.surface },
    IncSearch = { fg = p.base, bg = p.rose },
    LineNr = { fg = p.muted },
    MatchParen = { fg = p.text, bg = p.highlight_med },
    ModeMsg = { fg = p.subtle },
    MoreMsg = { fg = p.iris },
    NonText = { fg = p.muted },
    Normal = { fg = p.text, bg = p.base },
    NormalFloat = { fg = p.love },
    NormalNC = { fg = p.text, bg = p.base },
    NvimInternalError = { fg = '#ffffff', bg = p.love },
    Pmenu = { fg = blend(p.base, p.subtle, 0.5), bg = blend(p.highlight_low, p.base, 0.3) },
    PmenuSbar = { bg = p.highlight_low },
    PmenuSel = { fg = p.love, bg = blend(p.highlight_low, p.base, 1) },
    PmenuThumb = { bg = p.highlight_med },
    Question = { fg = p.highlight_high },
    RedrawDebugClear = { fg = '#ffffff', bg = p.gold },
    RedrawDebugComposed = { fg = '#ffffff', bg = p.pine },
    RedrawDebugRecompose = { fg = '#ffffff', bg = p.love },
    Search = { bg = p.highlight_med },
    SignColumn = { fg = p.text, bg = p.base },
    SpecialKey = { fg = p.foam },
    SpellBad = { sp = p.subtle, style = 'undercurl' },
    SpellCap = { sp = p.subtle, style = 'undercurl' },
    SpellLocal = { sp = p.subtle, style = 'undercurl' },
    SpellRare = { sp = p.subtle, style = 'undercurl' },
    StatusLine = { fg = p.subtle, bg = p.surface },
    StatusLineNC = { fg = p.muted, bg = p.base },
    StatusLineTerm = { link = 'StatusLine' },
    StatusLineTermNC = { link = 'StatusLineNC' },
    TabLine = { fg = p.subtle, bg = p.surface },
    TabLineFill = { bg = p.surface },
    TabLineSel = { fg = p.text, bg = p.overlay },
    Title = { fg = p.text },
    VertSplit = { fg = p.highlight_med },
    Visual = { bg = p.highlight_med },
    WarningMsg = { fg = p.gold },
    WildMenu = { link = 'IncSearch' },
    diffAdded = { link = 'DiffAdd' },
    diffChanged = { link = 'DiffChange' },
    diffRemoved = { link = 'DiffDelete' },

    Boolean = { fg = p.rose },
    Character = { fg = p.gold },
    Comment = { fg = p.highlight_high, style = 'italic' },
    Conditional = { fg = p.pine },
    Constant = { fg = p.gold },
    Debug = { fg = p.rose },
    Define = { fg = p.iris },
    Delimiter = { fg = p.subtle },
    Error = { fg = p.love },
    Exception = { fg = p.pine },
    Float = { fg = p.gold },
    Function = { fg = p.rose },
    Identifier = { fg = p.foam },
    Include = { fg = p.iris },
    Keyword = { fg = p.pine },
    Label = { fg = p.foam },
    Macro = { fg = p.iris },
    Number = { fg = p.gold },
    Operator = { fg = p.love },
    PreCondit = { fg = p.iris },
    PreProc = { fg = p.subtle },
    Repeat = { fg = p.pine },
    Special = { fg = p.love },
    SpecialChar = { fg = p.rose },
    SpecialComment = { fg = p.iris },
    Statement = { fg = p.pine },
    StorageClass = { fg = p.foam },
    String = { fg = p.gold },
    Structure = { fg = p.foam },
    Tag = { fg = p.rose },
    Todo = { fg = p.iris },
    Type = { fg = p.foam },
    Typedef = { fg = p.foam },
    Underlined = { style = 'underline' },

    htmlArg = { fg = p.iris },
    htmlBold = { style = 'bold' },
    htmlEndTag = { fg = p.subtle },
    htmlH1 = { fg = p.iris, style = 'bold' },
    htmlH2 = { fg = p.foam, style = 'bold' },
    htmlH3 = { fg = p.rose, style = 'bold' },
    htmlH4 = { fg = p.gold, style = 'bold' },
    htmlH5 = { fg = p.pine, style = 'bold' },
    htmlItalic = { style = 'italic' },
    htmlLink = { fg = p.iris },
    htmlTag = { fg = p.subtle },
    htmlTagN = { fg = p.text },
    htmlTagName = { fg = p.foam },

    markdownDelimiter = { fg = p.subtle },
    markdownH1 = { fg = p.iris, style = 'bold' },
    markdownH1Delimiter = { link = 'markdownH1' },
    markdownH2 = { fg = p.foam, style = 'bold' },
    markdownH2Delimiter = { link = 'markdownH2' },
    markdownH3 = { fg = p.rose, style = 'bold' },
    markdownH3Delimiter = { link = 'markdownH3' },
    markdownH4 = { fg = p.gold, style = 'bold' },
    markdownH4Delimiter = { link = 'markdownH4' },
    markdownH5 = { fg = p.pine, style = 'bold' },
    markdownH5Delimiter = { link = 'markdownH5' },
    markdownH6 = { fg = p.foam, style = 'bold' },
    markdownH6Delimiter = { link = 'markdownH6' },
    markdownLinkText = { fg = p.iris, style = 'underline' },
    markdownUrl = { link = 'markdownLinkText' },

    mkdCode = { fg = p.foam, style = 'italic' },
    mkdCodeDelimiter = { fg = p.rose },
    mkdCodeEnd = { fg = p.foam },
    mkdCodeStart = { fg = p.foam },
    mkdFootnotes = { fg = p.foam },
    mkdID = { fg = p.foam, style = 'underline' },
    mkdInlineURL = { fg = p.iris, style = 'underline' },
    mkdLink = { link = 'mkdInlineURL' },
    mkdLinkDef = { link = 'mkdInlineURL' },
    mkdListItemLine = { fg = p.text },
    mkdRule = { fg = p.subtle },
    mkdURL = { link = 'mkdInlineURL' },

    DiagnosticError = { fg = p.pine },
    DiagnosticHint = { fg = p.iris },
    DiagnosticInfo = { fg = p.foam },
    DiagnosticWarn = { fg = p.gold },
    DiagnosticDefaultError = { fg = p.love },
    DiagnosticDefaultHint = { fg = p.iris },
    DiagnosticDefaultInfo = { fg = p.foam },
    DiagnosticDefaultWarn = { fg = p.gold },
    DiagnosticFloatingError = { fg = p.pine },
    DiagnosticFloatingHint = { fg = p.text },
    DiagnosticFloatingInfo = { fg = p.foam },
    DiagnosticFloatingWarn = { fg = p.gold },
    DiagnosticSignError = { fg = p.pine },
    DiagnosticSignHint = { fg = p.iris },
    DiagnosticSignInfo = { fg = p.foam },
    DiagnosticSignWarn = { fg = p.gold },
    DiagnosticStatusLineError = { fg = p.love, bg = p.surface },
    DiagnosticStatusLineHint = { fg = p.iris, bg = p.surface },
    DiagnosticStatusLineInfo = { fg = p.foam, bg = p.surface },
    DiagnosticStatusLineWarn = { fg = p.gold, bg = p.surface },
    DiagnosticUnderlineError = { sp = p.love, style = 'undercurl' },
    DiagnosticUnderlineHint = { sp = p.iris, style = 'undercurl' },
    DiagnosticUnderlineInfo = { sp = p.foam, style = 'undercurl' },
    DiagnosticUnderlineWarn = { sp = p.gold, style = 'undercurl' },
    DiagnosticVirtualTextError = { fg = p.love },
    DiagnosticVirtualTextHint = { fg = p.iris },
    DiagnosticVirtualTextInfo = { fg = p.foam },
    DiagnosticVirtualTextWarn = { fg = p.gold },

    -- healthcheck
    healthError = { fg = p.love },
    healthSuccess = { fg = p.foam },
    healthWarning = { fg = p.gold },

    -- Treesitter
    ["@attribute"] = { link = "PreProc" },
    ["@boolean"] = { link = "Boolean" },
    ["@character"] = { link = "Character" },
    ["@character.special"] = { link = "SpecialChar" },
    ["@comment"] = { link = "Comment" },
    ["@conditional"] = { link = "Conditional" },
    ["@constant"] = { link = "Constant" },
    ["@constant.builtin"] = { link = "Special" },
    ["@constant.macro"] = { link = "Define" },
    ["@constructor"] = { link = "Special" },
    ["@debug"] = { link = "Debug" },
    ["@define"] = { link = "Define" },
    ["@exception"] = { link = "Exception" },
    ["@field"] = { link = "Identifier" },
    ["@float"] = { link = "Float" },
    ["@function"] = { link = "Function" },
    ["@function.builtin"] = { link = "Special" },
    ["@function.call"] = { link = "Function" },
    ["@function.macro"] = { link = "Macro" },
    ["@include"] = { link = "Include" },
    ["@keyword"] = { link = "Keyword" },
    ["@keyword.function"] = { link = "Keyword" },
    ["@keyword.return"] = { link = "Keyword" },
    ["@label"] = { link = "Label" },
    ["@method"] = { link = "Function" },
    ["@method.call"] = { link = "Function" },
    ["@namespace"] = { link = "Include" },
    ["@none"] = { bg = "NONE", fg = "NONE" },
    ["@number"] = { link = "Number" },
    ["@operator"] = { link = "Operator" },
    ["@parameter"] = { link = "Identifier" },
    ["@preproc"] = { link = "PreProc" },
    ["@property"] = { link = "Identifier" },
    ["@punctuation.bracket"] = { link = "Delimiter" },
    ["@punctuation.delimiter"] = { link = "Delimiter" },
    ["@punctuation.special"] = { link = "Delimiter" },
    ["@repeat"] = { link = "Repeat" },
    ["@storageclass"] = { link = "StorageClass" },
    ["@string"] = { link = "String" },
    ["@string.escape"] = { link = "SpecialChar" },
    ["@string.regex"] = { link = "String" },
    ["@string.special"] = { link = "SpecialChar" },
    ["@symbol"] = { link = "Identifier" },
    ["@tag"] = { link = "Tag" },
    ["@tag.attribute"] = { link = "Identifier" },
    ["@tag.delimiter"] = { link = "Delimiter" },
    ["@text"] = { fg = p.text },
    ["@text.danger"] = { link = "ErrorMsg" },
    ["@text.diff.add"] = { link = "diffAdded" },
    ["@text.diff.delete"] = { link = "diffRemoved" },
    ["@text.environment"] = { link = "Macro" },
    ["@text.environment.name"] = { link = "Type" },
    ["@text.literal"] = { link = "String" },
    ["@text.math"] = { link = "Special" },
    ["@text.note"] = { link = "SpecialComment" },
    ["@text.reference"] = { link = "Constant" },
    ["@text.title"] = { link = "Title" },
    ["@text.todo"] = { link = "Todo" },
    ["@text.todo.checked"] = { link = "Done" },
    ["@text.todo.unchecked"] = { link = "Todo" },
    ["@text.uri"] = { link = "Underlined" },
    ["@text.warning"] = { link = "WarningMsg" },
    ["@type"] = { link = "Type" },
    ["@type.builtin"] = { link = "Type" },
    ["@type.definition"] = { link = "Typedef" },
    ["@type.qualifier"] = { link = "Type" },
    ["@variable"] = { fg = p.text, style = 'italic' },
    ["@variable.builtin"] = { link = "Special" },

    -- nvim-treesitter (0.8 overrides)
    ["@keyword.operator"] = { fg = p.subtle },
    ["@text.emphasis"] = { italic = true },
    ["@text.strike"] = { strikethrough = true },
    ["@text.strong"] = { bold = true },
    ["@text.underline"] = { underline = true },

    -- vim.lsp.buf.document_highlight()
    LspReferenceText = { bg = p.highlight_med },
    LspReferenceRead = { bg = p.highlight_med },
    LspReferenceWrite = { bg = p.highlight_med },

    -- lsp-highlight-codelens
    LspCodeLens = { fg = p.subtle }, -- virtual text of code lens
    LspCodeLensSeparator = { fg = p.highlight_high }, -- separator between two or more code lens

    -- lewis6991/gitsigns.nvim
    GitSignsAdd = { fg = p.rose },
    GitSignsChange = { fg = p.gold },
    GitSignsDelete = { fg = p.subtle },
    SignAdd = { link = 'GitSignsAdd' },
    SignChange = { link = 'GitSignsChange' },
    SignDelete = { link = 'GitSignsDelete' },

    -- kyazdani42/nvim-tree.lua
    NvimTreeEmptyFolderName = { fg = p.muted },
    NvimTreeFileDeleted = { fg = p.love },
    NvimTreeFileDirty = { fg = p.rose },
    NvimTreeFileMerge = { fg = p.iris },
    NvimTreeFileNew = { fg = p.foam },
    NvimTreeFileRenamed = { fg = p.pine },
    NvimTreeFileStaged = { fg = p.iris },
    NvimTreeFolderIcon = { fg = p.subtle },
    NvimTreeFolderName = { fg = p.foam },
    NvimTreeGitDeleted = { fg = p.love },
    NvimTreeGitDirty = { fg = p.rose },
    NvimTreeGitIgnored = { fg = p.muted },
    NvimTreeGitMerge = { fg = p.iris },
    NvimTreeGitNew = { fg = p.foam },
    NvimTreeGitRenamed = { fg = p.pine },
    NvimTreeGitStaged = { fg = p.iris },
    NvimTreeImageFile = { fg = p.text },
    NvimTreeNormal = { fg = p.text },
    NvimTreeOpenedFile = { fg = p.text, bg = p.highlight_med },
    NvimTreeOpenedFolderName = { link = 'NvimTreeFolderName' },
    NvimTreeRootFolder = { fg = p.iris },
    NvimTreeSpecialFile = { link = 'NvimTreeNormal' },
    NvimTreeWindowPicker = { fg = p.base, bg = p.iris },

    -- folke/which-key.nvim
    WhichKey = { fg = p.iris },
    WhichKeyDesc = { fg = p.gold },
    WhichKeyFloat = { bg = p.surface },
    WhichKeyGroup = { fg = p.foam },
    WhichKeySeparator = { fg = p.subtle },
    WhichKeyValue = { fg = p.rose },

    -- luka-reineke/indent-blankline.nvim
    IndentBlanklineChar = { fg = p.muted },

    -- hrsh7th/nvim-cmp
    CmpItemAbbr = { fg = p.text },
    CmpItemAbbrDeprecated = { fg = p.subtle, style = 'strikethrough' },
    CmpItemAbbrMatch = { fg = p.text, style = 'bold' },
    CmpItemAbbrMatchFuzzy = { fg = p.text, style = 'bold' },
    CmpItemKind = { fg = blend(p.base, p.subtle, 0.5) },
    CmpItemKindClass = { fg = p.gold },
    CmpItemKindFunction = { fg = p.iris },
    CmpItemKindInterface = { fg = p.gold },
    CmpItemKindMethod = { fg = p.iris },
    CmpItemKindSnippet = { fg = p.iris },
    CmpItemKindVariable = { fg = p.foam },
    CmpFloatBorder = { fg = p.highlight_med },

    -- nvim-telescope/telescope.nvim
    TelescopeBorder = { fg = p.highlight_med },
    TelescopeMatching = { fg = p.subtle },
    TelescopeNormal = { fg = p.text },
    TelescopePromptNormal = { fg = p.text },
    TelescopePromptPrefix = { fg = p.subtle },
    TelescopeSelection = { fg = p.foam, bg = p.highlight_low },
    TelescopeSelectionCaret = { fg = p.rose, bg = p.overlay },
    TelescopeTitle = { fg = p.text },

    -- rcarriga/nvim-notify
    NotifyDEBUGBorder = { fg = p.muted },
    NotifyDEBUGIcon = { link = 'NotifyDEBUGBorder' },
    NotifyDEBUGTitle = { link = 'NotifyDEBUGBorder' },
    NotifyERRORBorder = { fg = p.love },
    NotifyERRORIcon = { link = 'NotifyERRORBorder' },
    NotifyERRORTitle = { link = 'NotifyERRORBorder' },
    NotifyINFOBorder = { fg = p.foam },
    NotifyINFOIcon = { link = 'NotifyINFOBorder' },
    NotifyINFOTitle = { link = 'NotifyINFOBorder' },
    NotifyTRACEBorder = { fg = p.iris },
    NotifyTRACEIcon = { link = 'NotifyTRACEBorder' },
    NotifyTRACETitle = { link = 'NotifyTRACEBorder' },
    NotifyWARNBorder = { fg = p.gold },
    NotifyWARNIcon = { link = 'NotifyWARNBorder' },
    NotifyWARNTitle = { link = 'NotifyWARNBorder' },
  }

  -- Terminal
  vim.g.terminal_color_0 = p.overlay -- black
  vim.g.terminal_color_8 = p.subtle -- bright black
  vim.g.terminal_color_1 = p.pine -- red
  vim.g.terminal_color_9 = p.pine -- bright red
  vim.g.terminal_color_2 = p.rose -- green
  vim.g.terminal_color_10 = p.rose -- bright green
  vim.g.terminal_color_3 = p.gold -- yellow
  vim.g.terminal_color_11 = p.gold -- bright yellow
  vim.g.terminal_color_4 = p.foam -- blue
  vim.g.terminal_color_12 = p.foam -- bright blue
  vim.g.terminal_color_5 = p.iris -- magenta
  vim.g.terminal_color_13 = p.iris -- bright magenta
  vim.g.terminal_color_6 = p.subtle -- cyan
  vim.g.terminal_color_14 = p.subtle -- bright cyan
  vim.g.terminal_color_7 = p.text -- white
  vim.g.terminal_color_15 = p.text -- bright white

  return theme
end

return M
